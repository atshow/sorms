package ${packages};

${imports}
/* 
* ${comment}
* generated by jetbrick ${new Date().format("yyyy-MM-dd")}
*/
@Entity
@Table(name = "${tableName}")
#if(comment)
@Comment(${"\""+comment+"\""})
#end
public class ${className} extends sf.database.DBObject  {

	#for(Map attr: attrs)

	    #if(attr.comment)
	//${attr.comment}
	@Comment(${"\""+attr.comment+"\""})
	    #end
	#if(attr.pk)
    @Id
        #if(attr.desc.autoincrement||attr.desc.generatedcolumn)
    @GeneratedValue
        #end
    #end
	#if(attr.lob)
    @Lob
    #end
	@Column(name = "${attr.columnName}" #if(attr.type=="String" && attr.desc.columnSize < 10000),length = ${attr.desc.columnSize}#end #if(attr.bigNumber),precision=${attr.desc.columnSize},scale=${attr.desc.decimalDigit}#end)
	#if(attr.temporal)
	${attr.temporal}
	#end
	private ${attr.type} ${attr.name} ;
	#end

	public ${className}() {
	}

    #set(boolean f=false) #set(String str="")
    public enum Field implements sf.database.DBField{ #for(Map attr: attrs)   #set(str=str+(f?",":"")+attr.name) #set(boolean f=true)   #end
        ${str}
    }


	#for(Map attr: attrs)
     #if(attr.comment)
    /**${attr.comment}
    *@return
    */
     #end
    public ${attr.type} get${attr.methodName}(){
        return  ${attr.name};
    }
     #if(attr.comment)
    /**${attr.comment}
    *@param  ${attr.name}
    */
     #end
    public void set${attr.methodName}(${attr.type} ${attr.name} ){
        this.${attr.name} = ${attr.name};
    }
    #end

}
